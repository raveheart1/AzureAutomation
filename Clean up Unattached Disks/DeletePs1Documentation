Sure, here's a draft of a README for the second script that deletes tagged disks.

---

# Azure Disk Cleanup Deletion Script

## Overview

The `DeleteTaggedDisks.ps1` PowerShell script automates the process of deleting Azure disks that have been tagged with "ToDelete:Yes" and are older than 30 days.

This script is a companion to the `TagUnattachedDisks.ps1` script, which identifies unattached Azure disks that do not have "Replica" in their names and do not have a "ToDelete" tag set to "No", then tags these disks with "ToDelete:Yes".

By automating the deletion of tagged disks, you can ensure your Azure environment remains clean and well-organized, and potentially save costs by removing unused resources.

## Prerequisites

To use this script, you will need:

1. **Azure PowerShell Modules**: The script uses the `Az.Accounts` and `Az.Compute` modules. Ensure they are installed on the machine where the script will run.

2. **Azure Subscription**: The script operates on Azure disks. You need to have an active Azure subscription with the necessary permissions to view and delete disks.

3. **Azure Automation Account (optional)**: If you wish to run this script in an Azure Automation runbook, you need an Automation account.

## Usage

1. **Locally**: Open a PowerShell terminal and navigate to the directory where the `DeleteTaggedDisks.ps1` script is located. Run the script using the command: `.\DeleteTaggedDisks.ps1`.

2. **Azure Automation Runbook**: 

- Create a new runbook in your Azure Automation account.
- Copy and paste the script into the runbook.
- Remember to replace `Connect-AzAccount` with the appropriate code to use the managed identity. Typically, you use the `Connect-AzAccount -Identity` command to connect using the managed identity.
- Save and publish the runbook.
- Start the runbook.

## Note on Managed Identities

Managed identities provide an Azure Active Directory identity to Azure resources, allowing those resources to authenticate to services that support Azure AD authentication. In this case, the managed identity is used to authenticate the Automation runbook to the Azure subscription.

To use a managed identity in an Azure Automation runbook, the Automation account must be configured with a managed identity, and the managed identity must have the necessary permissions to perform operations on Azure disks. 

The `Connect-AzAccount -Identity` command is used in the script to authenticate using the managed identity. If your environment requires different commands or parameters, adjust this command accordingly.

---

Please remember that deletion of resources is permanent and not recoverable. Always double-check your deletion criteria to ensure you are deleting only the intended resources.